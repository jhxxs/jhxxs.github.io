"use strict";(self.webpackChunkmy_websites=self.webpackChunkmy_websites||[]).push([[384],{5420:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>C,contentTitle:()=>c,default:()=>g,frontMatter:()=>u,metadata:()=>d,toc:()=>R});var n=o(7462),l=(o(7294),o(3905)),a=o(1814),i=o(6010),r=o(814);const m=JSON.parse('{"buckets":[{"Name":"extras","Source":"https://github.com/ScoopInstaller/Extras","Updated":"2022-07-20T12:32:28+08:00","Manifests":1612},{"Name":"main","Source":"https://github.com/ScoopInstaller/Main","Updated":"2022-07-20T12:32:59+08:00","Manifests":1061},{"Name":"nerd-fonts","Source":"https://github.com/matthewjberger/scoop-nerd-fonts","Updated":"2022-07-17T00:16:56+08:00","Manifests":202}],"config":{"SCOOP_REPO":"https://github.com/ScoopInstaller/Scoop","SCOOP_BRANCH":"master"},"apps":[{"Version":"22.01","Name":"7zip","Source":"main","Info":"","Updated":"2022-07-19T18:11:28.6082992+08:00"},{"Version":"1.4.1.1017","Name":"everything","Source":"extras","Info":"","Updated":"2022-07-19T18:49:24.9185197+08:00"},{"Version":"2.37.1.windows.1","Name":"git","Source":"main","Info":"","Updated":"2022-07-19T18:11:43.4461246+08:00"},{"Version":"1.3.0","Name":"gsudo","Source":"main","Info":"","Updated":"2022-07-19T18:56:13.4518442+08:00"},{"Version":"2.1.0","Name":"Iosevka-NF-Mono","Source":"nerd-fonts","Info":"","Updated":"2022-07-20T14:56:49.1126801+08:00"},{"Version":"2.242","Name":"JetBrains-Mono","Source":"nerd-fonts","Info":"","Updated":"2022-07-20T13:54:55.6910999+08:00"},{"Version":"5.21.1129.1","Name":"notepad3","Source":"extras","Info":"","Updated":"2022-07-19T18:40:04.9216528+08:00"},{"Version":"1.1.9","Name":"nvm","Source":"main","Info":"","Updated":"2022-07-19T18:55:23.2617376+08:00"},{"Version":"1.16.2","Name":"snipaste","Source":"extras","Info":"","Updated":"2022-07-19T19:14:21.4139775+08:00"},{"Version":"1.9.1","Name":"starship","Source":"main","Info":"","Updated":"2022-07-19T19:43:48.647938+08:00"},{"Version":"1.69.2","Name":"vscode","Source":"extras","Info":"","Updated":"2022-07-19T18:14:13.2880162+08:00"},{"Version":"1.3.1872","Name":"winget","Source":"main","Info":"","Updated":"2022-07-19T18:29:07.6574217+08:00"}]}'),s=JSON.parse('{"$schema":"https://aka.ms/winget-packages.schema.2.0.json","CreationDate":"2022-07-20T18:10:45.102-00:00","Sources":[{"Packages":[{"PackageIdentifier":"Alibaba.aDrive","Version":"3.7.0"},{"PackageIdentifier":"BinaryFortress.DisplayFusion","Version":"9.8.0.0"},{"PackageIdentifier":"Microsoft.WindowsTerminal","Version":"1.13.11432.0"},{"PackageIdentifier":"Microsoft.OneDrive","Version":"22.131.0619.0001"},{"PackageIdentifier":"Tencent.TIM","Version":"3.3.9.22051"},{"PackageIdentifier":"Tencent.WeChat","Version":"3.7.5.23"},{"PackageIdentifier":"Yuanli.uTools","Version":"2.6.3"},{"PackageIdentifier":"EuSoft.Eudic","Version":"13.0.0.0"},{"PackageIdentifier":"XunLei.xunlei","Version":"11.3.13.1940"},{"PackageIdentifier":"Microsoft.VC++2013Redist-x64","Version":"12.0.40664.0"},{"PackageIdentifier":"Microsoft.VC++2010Redist-x64","Version":"10.0.40219"},{"PackageIdentifier":"Microsoft.VC++2012Redist-x86","Version":"11.0.61030.0"},{"PackageIdentifier":"Microsoft.VC++2008Redist-x64","Version":"9.0.30729.6161"},{"PackageIdentifier":"AdGuard.AdGuard","Version":"7.10.3952.0"},{"PackageIdentifier":"Microsoft.VC++2005Redist-x86","Version":"8.0.61001"},{"PackageIdentifier":"MacType.MacType","Version":"2021.1-RC1"},{"PackageIdentifier":"Microsoft.VC++2008Redist-x86","Version":"9.0.30729.6161"},{"PackageIdentifier":"Microsoft.VC++2013Redist-x86","Version":"12.0.40664.0"},{"PackageIdentifier":"Microsoft.Edge","Version":"103.0.1264.62"},{"PackageIdentifier":"Microsoft.PowerShell","Version":"7.2.5.0"},{"PackageIdentifier":"TheDocumentFoundation.LibreOffice.HelpPack","Version":"7.3.4.2"},{"PackageIdentifier":"TheDocumentFoundation.LibreOffice","Version":"7.3.4.2"},{"PackageIdentifier":"Microsoft.VC++2010Redist-x86","Version":"10.0.40219"},{"PackageIdentifier":"Microsoft.VC++2005Redist-x64","Version":"8.0.61000"},{"PackageIdentifier":"Microsoft.VC++2012Redist-x64","Version":"11.0.61030.0"},{"PackageIdentifier":"Tencent.wechat-devtool","Version":"1.06.2206090"}],"SourceDetails":{"Argument":"https://cdn.winget.microsoft.com/cache","Identifier":"Microsoft.Winget.Source_8wekyb3d8bbwe","Name":"winget","Type":"Microsoft.PreIndexed.Package"}},{"Packages":[{"PackageIdentifier":"9PKTQ5699M62","Version":"13.4.99.0"}],"SourceDetails":{"Argument":"https://storeedgefd.dsx.mp.microsoft.com/v9.0","Identifier":"StoreEdgeFD","Name":"msstore","Type":"Microsoft.Rest"}}],"WinGetVersion":"1.3.0"}'),p=JSON.parse('{"$help":"https://aka.ms/terminal-documentation","$schema":"https://aka.ms/terminal-profiles-schema","actions":[{"command":{"action":"copy","singleLine":false},"keys":"ctrl+c"},{"command":"paste","keys":"ctrl+v"},{"command":"find","keys":"ctrl+shift+f"},{"command":"closeWindow","keys":"ctrl+q"},{"command":{"action":"splitPane","split":"auto","splitMode":"duplicate"},"keys":"alt+shift+d"},{"command":{"action":"closeTab"},"keys":"ctrl+w"}],"alwaysShowTabs":true,"confirmCloseAllTabs":true,"copyFormatting":"none","copyOnSelect":false,"defaultProfile":"{61c54bbd-c2c6-5271-96e7-009a87ff44bf}","experimental.rendering.software":true,"initialCols":100,"initialPosition":"500,250","initialRows":35,"language":"zh-Hans-CN","launchMode":"default","profiles":{"defaults":{"font":{"face":"JetBrainsMono NF","weight":"thin"}},"list":[{"background":"#013456","backgroundImage":"https://s2.loli.net/2022/07/21/yZRnjg4CHielxaV.png","backgroundImageOpacity":0.75,"backgroundImageStretchMode":"uniformToFill","colorScheme":"Dracula","commandline":"C://Program Files//PowerShell//7//pwsh.exe -NoLogo -NoExit","cursorShape":"vintage","experimental.retroTerminalEffect":false,"font":{"face":"JetBrainsMono NF","size":10},"guid":"{61c54bbd-c2c6-5271-96e7-009a87ff44bf}","hidden":false,"icon":"C:\\\\Program Files\\\\PowerShell\\\\7\\\\assets\\\\Powershell_av_colors.ico","name":"Windows PowerShell","opacity":60,"padding":"7, 7 ,7, 7","scrollbarState":"visible","startingDirectory":"D://workspace","useAcrylic":true},{"colorScheme":"Dracula","commandline":"gsudo.exe powershell.exe","guid":"{a128f8c4-4207-4941-8be8-bf540d94affb}","hidden":true,"icon":"ms-appdata:///roaming/powershell_ise.ico","name":"Window PowerShell Elevated"},{"commandline":"D:\\\\Program Files\\\\Git\\\\git-bash.exe","guid":"{0caa0dad-35be-5f56-a8ff-afceeeaa6101}","hidden":true,"name":"\u547d\u4ee4\u63d0\u793a\u7b26"},{"commandline":"D:\\\\Program Files\\\\Git\\\\git-bash.exe","guid":"{574e775e-4f2a-5b96-ac1e-a2962a402336}","hidden":true,"icon":"D:\\\\Program Files\\\\Git\\\\git-bash.exe","name":"Bash","source":"Windows.Terminal.PowershellCore","startingDirectory":"D:\\\\workspace"}]},"schemes":[{"background":"#1D2342","black":"#101116","blue":"#00B0FF","brightBlack":"#686868","brightBlue":"#6871FF","brightCyan":"#60FDFF","brightGreen":"#5FFA68","brightPurple":"#D682EC","brightRed":"#FF6E67","brightWhite":"#FFFFFF","brightYellow":"#FFFC67","cursorColor":"#FFFFFF","cyan":"#76C1FF","foreground":"#B8FFE1","green":"#00FF9C","name":"Blue Matrix","purple":"#D57BFF","red":"#FF5680","selectionBackground":"#FFFFFF","white":"#C7C7C7","yellow":"#FFFC58"},{"background":"#0C0C0C","black":"#0C0C0C","blue":"#0037DA","brightBlack":"#767676","brightBlue":"#3B78FF","brightCyan":"#61D6D6","brightGreen":"#16C60C","brightPurple":"#B4009E","brightRed":"#E74856","brightWhite":"#F2F2F2","brightYellow":"#F9F1A5","cursorColor":"#FFFFFF","cyan":"#3A96DD","foreground":"#CCCCCC","green":"#13A10E","name":"Campbell","purple":"#881798","red":"#C50F1F","selectionBackground":"#FFFFFF","white":"#CCCCCC","yellow":"#C19C00"},{"background":"#012456","black":"#0C0C0C","blue":"#0037DA","brightBlack":"#767676","brightBlue":"#3B78FF","brightCyan":"#61D6D6","brightGreen":"#16C60C","brightPurple":"#B4009E","brightRed":"#E74856","brightWhite":"#F2F2F2","brightYellow":"#F9F1A5","cursorColor":"#FFFFFF","cyan":"#3A96DD","foreground":"#CCCCCC","green":"#13A10E","name":"Campbell Powershell","purple":"#881798","red":"#C50F1F","selectionBackground":"#FFFFFF","white":"#CCCCCC","yellow":"#C19C00"},{"background":"#1E1F29","black":"#000000","blue":"#BD93F9","brightBlack":"#555555","brightBlue":"#BD93F9","brightCyan":"#8BE9FD","brightGreen":"#50FA7B","brightPurple":"#FF79C6","brightRed":"#FF5555","brightWhite":"#FFFFFF","brightYellow":"#F1FA8C","cursorColor":"#FFFFFF","cyan":"#8BE9FD","foreground":"#F8F8F2","green":"#50FA7B","name":"Dracula","purple":"#FF79C6","red":"#FF5555","selectionBackground":"#FFFFFF","white":"#BBBBBB","yellow":"#F1FA8C"},{"background":"#282C34","black":"#282C34","blue":"#61AFEF","brightBlack":"#5A6374","brightBlue":"#61AFEF","brightCyan":"#56B6C2","brightGreen":"#98C379","brightPurple":"#C678DD","brightRed":"#E06C75","brightWhite":"#DCDFE4","brightYellow":"#E5C07B","cursorColor":"#FFFFFF","cyan":"#56B6C2","foreground":"#DCDFE4","green":"#98C379","name":"One Half Dark","purple":"#C678DD","red":"#E06C75","selectionBackground":"#FFFFFF","white":"#DCDFE4","yellow":"#E5C07B"},{"background":"#FAFAFA","black":"#383A42","blue":"#0184BC","brightBlack":"#4F525D","brightBlue":"#61AFEF","brightCyan":"#56B5C1","brightGreen":"#98C379","brightPurple":"#C577DD","brightRed":"#DF6C75","brightWhite":"#FFFFFF","brightYellow":"#E4C07A","cursorColor":"#4F525D","cyan":"#0997B3","foreground":"#383A42","green":"#50A14F","name":"One Half Light","purple":"#A626A4","red":"#E45649","selectionBackground":"#FFFFFF","white":"#FAFAFA","yellow":"#C18301"},{"background":"#002B36","black":"#002B36","blue":"#268BD2","brightBlack":"#073642","brightBlue":"#839496","brightCyan":"#93A1A1","brightGreen":"#586E75","brightPurple":"#6C71C4","brightRed":"#CB4B16","brightWhite":"#FDF6E3","brightYellow":"#657B83","cursorColor":"#FFFFFF","cyan":"#2AA198","foreground":"#839496","green":"#859900","name":"Solarized Dark","purple":"#D33682","red":"#DC322F","selectionBackground":"#FFFFFF","white":"#EEE8D5","yellow":"#B58900"},{"background":"#FDF6E3","black":"#002B36","blue":"#268BD2","brightBlack":"#073642","brightBlue":"#839496","brightCyan":"#93A1A1","brightGreen":"#586E75","brightPurple":"#6C71C4","brightRed":"#CB4B16","brightWhite":"#FDF6E3","brightYellow":"#657B83","cursorColor":"#002B36","cyan":"#2AA198","foreground":"#657B83","green":"#859900","name":"Solarized Light","purple":"#D33682","red":"#DC322F","selectionBackground":"#FFFFFF","white":"#EEE8D5","yellow":"#B58900"},{"background":"#000000","black":"#000000","blue":"#3465A4","brightBlack":"#555753","brightBlue":"#729FCF","brightCyan":"#34E2E2","brightGreen":"#8AE234","brightPurple":"#AD7FA8","brightRed":"#EF2929","brightWhite":"#EEEEEC","brightYellow":"#FCE94F","cursorColor":"#FFFFFF","cyan":"#06989A","foreground":"#D3D7CF","green":"#4E9A06","name":"Tango Dark","purple":"#75507B","red":"#CC0000","selectionBackground":"#FFFFFF","white":"#D3D7CF","yellow":"#C4A000"},{"background":"#FFFFFF","black":"#000000","blue":"#3465A4","brightBlack":"#555753","brightBlue":"#729FCF","brightCyan":"#34E2E2","brightGreen":"#8AE234","brightPurple":"#AD7FA8","brightRed":"#EF2929","brightWhite":"#EEEEEC","brightYellow":"#FCE94F","cursorColor":"#000000","cyan":"#06989A","foreground":"#555753","green":"#4E9A06","name":"Tango Light","purple":"#75507B","red":"#CC0000","selectionBackground":"#FFFFFF","white":"#D3D7CF","yellow":"#C4A000"},{"background":"#000000","black":"#000000","blue":"#000080","brightBlack":"#808080","brightBlue":"#0000FF","brightCyan":"#00FFFF","brightGreen":"#00FF00","brightPurple":"#FF00FF","brightRed":"#FF0000","brightWhite":"#FFFFFF","brightYellow":"#FFFF00","cursorColor":"#FFFFFF","cyan":"#008080","foreground":"#C0C0C0","green":"#008000","name":"Vintage","purple":"#800080","red":"#800000","selectionBackground":"#FFFFFF","white":"#C0C0C0","yellow":"#808000"}],"showTabsInTitlebar":true,"showTerminalTitleInTitlebar":true,"startOnUserLogin":true,"tabWidthMode":"titleLength","theme":"dark","useAcrylicInTabRow":true,"wordDelimiters":" ./\\\\()\\"\'-:,.;<>~!@#$%^&*|+=[]{}~?\u2502"}'),u={title:"\u91cd\u88c5win11\u548c\u914d\u7f6e\u5f00\u53d1\u73af\u5883",authors:["kyle"],tags:["windows"]},c=void 0,d={permalink:"/2022/07/18/reinstall-win11-and-setup-env",source:"@site/blog/2022-07-18-reinstall-win11-and-setup-env.mdx",title:"\u91cd\u88c5win11\u548c\u914d\u7f6e\u5f00\u53d1\u73af\u5883",description:"\u4e3a\u4e86\u62ef\u6551\u6211\u7684 C \u76d8\uff0c\u4ee5\u53ca\u548c win11 dev \u7248\u8bf4\u518d\u89c1\uff0c\u4e00\u6012\u4e4b\u4e0b\u6211\u91cd\u88c5\u4e86\u7cfb\u7edf\uff0c\u968f\u4e4b\u800c\u6765\u7684\u662f\u4e00\u6574\u5929\u7684\u778e\u6298\u817e\uff0c\u53ef\u8c13\u662f\u88c5\u7cfb\u7edf\u5341\u5206\u949f\uff0c\u914d\u73af\u5883\u5927\u534a\u5929\u3002",date:"2022-07-18T00:00:00.000Z",formattedDate:"July 18, 2022",tags:[{label:"windows",permalink:"/tags/windows"}],readingTime:5.49,hasTruncateMarker:!0,authors:[{name:"Kyle Von",url:"https://github.com/jhxxs",imageURL:"https://avatars.githubusercontent.com/u/7448223?s=96&v=4",key:"kyle"}],frontMatter:{title:"\u91cd\u88c5win11\u548c\u914d\u7f6e\u5f00\u53d1\u73af\u5883",authors:["kyle"],tags:["windows"]},nextItem:{title:"\u8de8repo\u90e8\u7f72\u535a\u5ba2\u5230Github Pages",permalink:"/2022/04/17/deploy-to-github-pages-with-cross-repo-publish"}},C={authorsImageUrls:[void 0]},R=[{value:"\u91cd\u88c5\u7cfb\u7edf",id:"\u91cd\u88c5\u7cfb\u7edf",level:2},{value:"1. \u4e0b\u8f7d win11 \u955c\u50cf",id:"1-\u4e0b\u8f7d-msdn-\u6211\u544a\u8bc9\u4f60",level:4},{value:"2. \u5236\u4f5c USB \u542f\u52a8\u76d8",id:"2-\u5236\u4f5c-rufus-\u8f7b\u677e\u521b\u5efausb\u542f\u52a8\u76d8",level:4},{value:"3. reboot &amp; install",id:"3-reboot--install",level:4},{value:"4. \u6fc0\u6d3b\u7cfb\u7edf \ud83d\udc19",id:"4-\u4e91\u840c-windows-10-\u6fc0\u6d3b\u5de5\u5177-github",level:4},{value:"\u88c5\u673a\u5e94\u7528",id:"\u88c5\u673a\u5e94\u7528",level:2},{value:"\u914d\u7f6e nodejs \u73af\u5883",id:"\u914d\u7f6e-nodejs-\u73af\u5883",level:3},{value:"\u914d\u7f6e git-alias",id:"\u914d\u7f6e-git-alias",level:3},{value:"\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6",id:"\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6",level:2},{value:"scoop",id:"scoop",level:3},{value:"winget",id:"winget",level:3},{value:"windows terminal",id:"windows-terminal",level:3},{value:"starship",id:"starship",level:3},{value:"powershell",id:"powershell",level:3},{value:"Q &amp; A",id:"q--a",level:3}],w={toc:R};function g(e){let{components:t,...u}=e;return(0,l.kt)("wrapper",(0,n.Z)({},w,u,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u4e3a\u4e86\u62ef\u6551\u6211\u7684 C \u76d8\uff0c\u4ee5\u53ca\u548c win11 dev \u7248\u8bf4\u518d\u89c1\uff0c\u4e00\u6012\u4e4b\u4e0b\u6211\u91cd\u88c5\u4e86\u7cfb\u7edf\uff0c\u968f\u4e4b\u800c\u6765\u7684\u662f\u4e00\u6574\u5929\u7684\u778e\u6298\u817e\uff0c\u53ef\u8c13\u662f\u88c5\u7cfb\u7edf\u5341\u5206\u949f\uff0c\u914d\u73af\u5883\u5927\u534a\u5929\u3002"),(0,l.kt)("h2",{id:"\u91cd\u88c5\u7cfb\u7edf"},(0,l.kt)("a",{parentName:"h2",href:"https://pureinfotech.com/clean-install-windows-11/"},"\u91cd\u88c5\u7cfb\u7edf")),(0,l.kt)("p",null,"\u9996\u5148\u662f\u91cd\u88c5\u7cfb\u7edf\uff0c\u6211\u9009\u62e9\u7684\u662f\u7ecf\u5178\u7684 U \u76d8\u542f\u52a8\u76d8\u65b9\u5f0f\uff1a"),(0,l.kt)("h4",{id:"1-\u4e0b\u8f7d-msdn-\u6211\u544a\u8bc9\u4f60"},"1. \u4e0b\u8f7d ",(0,l.kt)("a",{parentName:"h4",href:"https://next.itellyou.cn/Original/#cbp=Product?ID=42e87ac8-9cd6-eb11-bdf8-e0d4e850c9c6",title:"MSDN \u6211\u544a\u8bc9\u4f60"},"win11 \u955c\u50cf")),(0,l.kt)("h4",{id:"2-\u5236\u4f5c-rufus-\u8f7b\u677e\u521b\u5efausb\u542f\u52a8\u76d8"},"2. \u5236\u4f5c ",(0,l.kt)("a",{parentName:"h4",href:"https://rufus.ie/zh/",title:"Rufus \u8f7b\u677e\u521b\u5efaUSB\u542f\u52a8\u76d8"},"USB \u542f\u52a8\u76d8")),(0,l.kt)("h4",{id:"3-reboot--install"},"3. reboot & install"),(0,l.kt)("h4",{id:"4-\u4e91\u840c-windows-10-\u6fc0\u6d3b\u5de5\u5177-github"},"4. ",(0,l.kt)("a",{parentName:"h4",href:"https://cmwtat.cloudmoe.com/cn.html",title:"\u4e91\u840c Windows 10 \u6fc0\u6d3b\u5de5\u5177"},"\u6fc0\u6d3b\u7cfb\u7edf")," ",(0,l.kt)("a",{parentName:"h4",href:"https://github.com/TGSAN/CMWTAT_Digital_Edition/releases,",title:"github"},"\ud83d\udc19")),(0,l.kt)("h2",{id:"\u88c5\u673a\u5e94\u7528"},"\u88c5\u673a\u5e94\u7528"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"APP"),(0,l.kt)("th",{parentName:"tr",align:null},"Desc"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"\u5fc5\u5907")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",{className:a.Z.p},"\ud83d\udd38\ud83d\udd38\ud83d\udd38"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/Fndroid/clash_for_windows_pkg/releases"},"Clash for Windows")," ",(0,l.kt)("br",null)," ",(0,l.kt)("a",{parentName:"td",href:"https://www.aliyundrive.com/s/XzSkgXNoBNs"},"\u963f\u91cc\u4e91\u76d8")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e00\u5207\u7684\u5f00\u59cb\uff0c\u6ca1\u6709\u5b83\u5bf8\u6b65\u96be\u884c")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.2"},"PowerShell 7")),(0,l.kt)("td",{parentName:"tr",align:null},"best shell on windows, perhaps")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("img",{src:"https://avatars.githubusercontent.com/u/16618068?s=30",width:"20px",align:"center"})," ",(0,l.kt)("a",{parentName:"td",href:"https://scoop.sh/",title:"A command-line installer for Windows"},"scoop")),(0,l.kt)("td",{parentName:"tr",align:null},"\u6709\u4e86 scoop \u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u8f7b\u677e\u5b89\u88c5\u5f88\u591a\u5fc5\u5907\u7684\u5f00\u53d1\u5de5\u5177\uff0c\u6bd4\u5982 nodejs\u3001git \u7b49\u7b49")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"\u63a8\u8350")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",{className:a.Z.p},"\ud83d\udd38\ud83d\udd38\ud83d\udd38"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("img",{src:"https://gerardog.github.io/gsudo/img/AnimatedPrompt.gif",className:(0,i.Z)(a.Z.logo)})," ",(0,l.kt)("a",{parentName:"td",href:"https://gerardog.github.io/gsudo/",title:"The missing piece in Windows. Cherry-pick which commands to elevate with just one keyword."},"gsudo")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7c7b\u4f3c linux \u7684 ",(0,l.kt)("inlineCode",{parentName:"td"},"sudo")," \u547d\u4ee4\uff0c\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"td"},"gsudo")," \u8f7b\u677e\u83b7\u53d6\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("img",{src:"https://starship.rs/icon.png",style:{height:20,verticalAlign:"middle",marginTop:-5}})," ",(0,l.kt)("a",{parentName:"td",href:"https://starship.rs/zh-CN/",title:"\u8f7b\u91cf\u7ea7\u3001\u53cd\u5e94\u8fc5\u901f\u3001\u53ef\u65e0\u9650\u5b9a\u5236\u7684\u9ad8\u989c\u503c\u7ec8\u7aef\uff01"},"starship")),(0,l.kt)("td",{parentName:"tr",align:null},"\u8f7b\u91cf\u7ea7\u3001\u53cd\u5e94\u8fc5\u901f\u3001\u53ef\u65e0\u9650\u5b9a\u5236\u7684\u9ad8\u989c\u503c\u7ec8\u7aef\uff01 ",(0,l.kt)("br",null),"\uff08\u642d\u914d powershell \u4f7f\u7528\uff09")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("img",{src:"https://chocolatey.org/assets/images/global-shared/logo-square.svg",style:{height:20}})," ",(0,l.kt)("a",{parentName:"td",href:"https://chocolatey.org/install",title:"THE PACKAGE MANAGER FOR WINDOWS"},"Chocolatey")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4ee5\u524d\u5e38\u7528\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\uff0c\u5e38\u7528\u547d\u4ee4",(0,l.kt)("inlineCode",{parentName:"td"},"choco install"),"\u6216",(0,l.kt)("inlineCode",{parentName:"td"},"cinst"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("img",{src:"https://www.nerdfonts.com/assets/img/nerd-fonts-logo.svg",style:{height:20,verticalAlign:"middle"}})," ",(0,l.kt)("a",{parentName:"td",href:"https://www.nerdfonts.com",title:"Iconic font aggregator, collection, and patcher"},"Nerd Fonts")),(0,l.kt)("td",{parentName:"tr",align:null},"windows \u5b57\u4f53 icon \u7f3a\u5931\u4f1a\u5bfc\u81f4\u7ec8\u7aef\u4e0a\u67d0\u4e9b\u56fe\u6807\u4e0d\u80fd\u6b63\u5e38\u663e\u793a\uff0c\u5b89\u88c5\u5bf9\u5e94\u5b57\u4f53\u7684 nerd font \u53ef\u4ee5\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/microsoft/winget-cli/releases",title:"Windows Package Manager CLI (aka winget)"},"winget")),(0,l.kt)("td",{parentName:"tr",align:null},"\u5fae\u8f6f\u5b98\u65b9\u5305\u7ba1\u7406\u5668")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"\u624b\u52a8\u5b89\u88c5")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",{className:a.Z.p},"\ud83d\udd38\ud83d\udd38\ud83d\udd38"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{href:"https://u.tools/",target:"__blank",title:"uTools",noreferrer:"true"}," ",(0,l.kt)("img",{alt:"uTools",src:"https://res.u-tools.cn/website/logo.png",className:(0,i.Z)(a.Z.logo,a.Z.logo_vertical,a.Z.logo_black)}))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("h4",{style:{margin:0}},"\u65b0\u4e00\u4ee3\u6548\u7387\u5de5\u5177\u5e73\u53f0"),(0,l.kt)("p",{style:{margin:0}},"\u81ea\u7531\u7ec4\u5408\u63d2\u4ef6\u5e94\u7528\uff0c\u6253\u9020\u4e13\u5c5e\u4f60\u7684\u8d81\u624b\u5de5\u5177\u96c6"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{href:"https://www.aliyundrive.com/s/VVukgeCQfyr",title:"Multiple Monitors Made Easy",noreferrer:"true"},(0,l.kt)("img",{src:"https://www.displayfusion.com/MediaCommon/SVGs/DisplayFusion/Logo.svg",className:(0,i.Z)(a.Z.logo)})," DisplayFusion")),(0,l.kt)("td",{parentName:"tr",align:null},"windows \u591a\u5c4f\u7ba1\u7406\u8f6f\u4ef6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{href:"https://www.libreoffice.org/download/download/",target:"_blank"},(0,l.kt)("img",{title:"LibreOffice",alt:"LibreOffice",src:"https://www.libreoffice.org/themes/libreofficenew/img/logo.png",className:(0,i.Z)(a.Z.logo,a.Z.logo_vertical,a.Z.logo_white)}))),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e70\u514d\u8d39\u5f00\u6e90\u4e14\u6ca1\u6709\u5e7f\u544a\u7684 office \u8f6f\u4ef6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{href:"https://1drv.ms/u/s!AmdJMpge_Sp0m3eat9Pwqq0U_ibw?e=O9buIZ",target:"_blank"},(0,l.kt)("img",{src:"https://www.eudic.net/v4/images/share/header_logo.png",className:(0,i.Z)(a.Z.logo,a.Z.logo_vertical),title:"\u6b27\u8def\u8bcd\u5178"}))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://www.eudic.net/v4/en/app/download"},"\u652f\u6301\u5bfc\u5165\u7b2c\u4e09\u65b9\u8bcd\u5178\u6587\u4ef6\uff0c\u66f4\u6709\u5f3a\u5927\u7684\u9f20\u6807\u53d6\u8bcd\u529f\u80fd"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://pan.baidu.com/s/1AFjaVywBWNV6Iqv-08mLGA?pwd=aewi"},"Bandizip")),(0,l.kt)("td",{parentName:"tr",align:null},"\u6700\u5e38\u7528\u7684\u89e3\u538b\u8f6f\u4ef6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://cn.bandisoft.com/honeyview/"},"Honeyview")),(0,l.kt)("td",{parentName:"tr",align:null},"\u6700\u65b9\u4fbf\u7684\u770b\u56fe\u8f6f\u4ef6\u4e86")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"\u63a8\u8350\u6d4f\u89c8\u5668\u6269\u5c55")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("p",{className:a.Z.p},"\ud83d\udd38\ud83d\udd38\ud83d\udd38"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("img",{src:"https://store-images.s-microsoft.com/image/apps.46522.8ff13729-2d23-45b8-a407-4d9f4abb1585.8c8932e1-8a1d-4f48-95da-4e1bc2a13ae0.9e6d8f9d-20f3-4ac4-824d-1d8a82f1e862?mode=scale&h=100&q=90&w=100",className:(0,i.Z)(a.Z.logo,a.Z.logo_vertical)})," ",(0,l.kt)("a",{parentName:"td",href:"https://microsoftedge.microsoft.com/addons/detail/imagus/elledlbkiggfdkllaphjkmaemdfpdkja?hl=zh-CN"},"Imagus")),(0,l.kt)("td",{parentName:"tr",align:null},"\u6d4f\u89c8\u5668\u56fe\u7247\u653e\u5927\u6269\u5c55\uff0c\u9f20\u6807\u79fb\u52a8\u5230\u56fe\u7f51\u9875\u56fe\u7247\u4e0a\uff0c\u5c31\u4f1a\u5f39\u663e\u793a\u51fa\u5927\u56fe\u9884\u89c8")))),(0,l.kt)("h3",{id:"\u914d\u7f6e-nodejs-\u73af\u5883"},"\u914d\u7f6e nodejs \u73af\u5883"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5b89\u88c5",(0,l.kt)("inlineCode",{parentName:"li"},"nvm"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# \u5b89\u88c5 nvm, mac \u6216 linus \u8bf7\u76f4\u63a5google nvm\uff0c\n# windows\u9700\u8981\u5b89\u88c5`nvm for windows`\n# https://github.com/coreybutler/nvm-windows\nscoop install nvm\n# setup nodejs\nnvm install lts     # mac \u4e0a\u662f nvm install --lts\nnvm use lts         # \u540c\u7406\uff0cmac \u4e0a\u662f nvm use --lts\n# \u67e5\u770b\u662f\u5426\u542f\u7528\u6210\u529f\nnvm list\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u914d\u7f6e",(0,l.kt)("inlineCode",{parentName:"li"},"npm"),"\u76f8\u5173")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="~/.npmrc"',title:'"~/.npmrc"'},"registry=https://registry.npmmirror.com/\n# proxy=http://127.0.0.1:7890/\n")),(0,l.kt)("h3",{id:"\u914d\u7f6e-git-alias"},"\u914d\u7f6e ",(0,l.kt)("a",{parentName:"h3",href:"https://github.com/GitAlias/gitalias"},"git-alias")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/GitAlias/gitalias/tree/main/doc/install",title:"setup GitAlias"},"\u8be6\u7ec6 setup \u6b65\u9aa4 \u89c1 github")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-editorconfig",metastring:'title="~/.gitconfig"',title:'"~/.gitconfig"'},'[gui]\n        encoding = utf-8\n[i18n "commit"]\n        encoding = utf-8\n[i18n]\n        logoutputencoding = utf-8\n[http]\n        proxy = http://127.0.0.1:7890\n[include]\n        path = ~/gitalias.txt\n')),(0,l.kt)("h2",{id:"\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6"},"\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6"),(0,l.kt)("h3",{id:"scoop"},"scoop"),(0,l.kt)("details",null,(0,l.kt)("summary",null," \u901a\u8fc7scoop \u5b89\u88c5\u7684app \u548c bucket \u4fe1\u606f"),(0,l.kt)(r.Z,{language:"json",mdxType:"CodeBlock"},JSON.stringify(m,null,1))),(0,l.kt)("h3",{id:"winget"},"winget"),(0,l.kt)("details",null,(0,l.kt)("summary",null," winget \u5b89\u88c5\u7684app\u4fe1\u606f"),(0,l.kt)(r.Z,{language:"json",mdxType:"CodeBlock"},JSON.stringify(s,null,1))),(0,l.kt)("h3",{id:"windows-terminal"},"windows terminal"),(0,l.kt)("details",null,(0,l.kt)("summary",null," Windows Terminal \u914d\u7f6e"),(0,l.kt)(r.Z,{language:"shell",mdxType:"CodeBlock"},"code $PROFILE"),(0,l.kt)(r.Z,{language:"json",mdxType:"CodeBlock"},JSON.stringify(p,null,1))),(0,l.kt)("h3",{id:"starship"},"starship"),(0,l.kt)("details",null,(0,l.kt)("summary",null," starship \u914d\u7f6e"),(0,l.kt)(r.Z,{language:"bash",mdxType:"CodeBlock"},"starship config # \u81ea\u52a8\u6253\u5f00starship\u914d\u7f6etoml\u6587\u4ef6"),(0,l.kt)(r.Z,{language:"toml",mdxType:"CodeBlock"},'# Inserts a blank line between shell prompts\nadd_newline = true\n\n# Replace the "\u276f" symbol in the prompt with "\u279c"\n[character] # The name of the module we are configuring is "character"\nsuccess_symbol = "[\ud83d\ude80](bold green)" # The "success_symbol" segment is being set to "\u279c" with the color "bold green"\nerror_symbol = "[\ud83d\ude35](bold red)" \n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = false\n\n[battery]\nfull_symbol = "\ud83d\udd0b "\ncharging_symbol = "\u26a1\ufe0f "\ndischarging_symbol = "\ud83d\udc80 "\ndisabled = false\n\n[git_branch]\n# truncation_length = 4\n# truncation_symbol = ""\n\n[git_status]\nconflicted = "\ud83c\udff3"\n# ahead = "\ud83c\udfce\ud83d\udca8"\n# behind = "\ud83d\ude30"\n# diverged = "\ud83d\ude35"\nup_to_date = "\u2714\ufe0f"\nuntracked = "\ud83e\udd37"\nstashed = "\ud83d\udce6"\nmodified = "\ud83d\udcdd"\nstaged = \'[++\\($count\\)](green) \'\nrenamed = "\ud83d\udc45"\ndeleted = "\ud83d\uddd1"\nahead = "\ud83c\udfce\ud83d\udca8\u21e1${count} "\ndiverged = "\ud83d\ude35\u21d5\u21e1${ahead_count}\u21e3${behind_count} "\nbehind = "\ud83d\ude30\u21e3${count} "\n\n[username]\nstyle_user = "white bold"\nstyle_root = "red bold"\nformat = "[$user]($style)@"\ndisabled = true\nshow_always = true\n\n[localip]\nssh_only = false\nformat = """\ud83d\udda5\ufe0f[$localipv4](bold red) """\ndisabled = true\n\n\n[docker_context]\nformat = "via [\ud83d\udc0b $context](blue bold)"\ndisabled = true')),(0,l.kt)("h3",{id:"powershell"},"powershell"),(0,l.kt)("details",null,(0,l.kt)("summary",null," powershell \u914d\u7f6e"),(0,l.kt)(r.Z,{language:"powershell",mdxType:"CodeBlock"},"code $PROFILE # \u5728vscode\u4e2d\u6253\u5f00powershell\u914d\u7f6e\u6587\u4ef6\nInstall-Module post-git\nInstall-Module npm-completion\nInstall-Module PSReadLine"),(0,l.kt)(r.Z,{language:"powershell",mdxType:"CodeBlock"},"using namespace System.Management.Automation\nusing namespace System.Management.Automation.Language\n#------------------------------- Import Modules BEGIN -------------------------------\n# \u5f15\u5165 oh-my-posh\n# Import-Module oh-my-posh \n# \u5f15\u5165 posh-git\nImport-Module posh-git \nImport-Module npm-completion\nImport-Module PSReadLine\n\n# Set-PoshPrompt -Theme Craver\nInvoke-Expression (&starship init powershell)\n\n#------------------------------- Import Modules BEGIN -------------------------------\n\n\n\n#-------------------------------  Set Hot-keys BEGIN  -------------------------------\n# \u8bbe\u7f6e\u9884\u6d4b\u6587\u672c\u6765\u6e90\u4e3a\u5386\u53f2\u8bb0\u5f55\nSet-PSReadLineOption -PredictionSource History\n\n# \u6bcf\u6b21\u56de\u6eaf\u8f93\u5165\u5386\u53f2\uff0c\u5149\u6807\u5b9a\u4f4d\u4e8e\u8f93\u5165\u5185\u5bb9\u672b\u5c3e\nSet-PSReadLineOption -HistorySearchCursorMovesToEnd\n\n# \u8bbe\u7f6e Tab \u4e3a\u83dc\u5355\u8865\u5168\u548c Intellisense\n# Set-PSReadLineKeyHandler -Key \"Tab\" -Function MenuComplete\n# \u8bbe\u7f6e Tab \u952e\u8865\u5168\nSet-PSReadlineKeyHandler -Key Tab -Function Complete \n\n# \u8bbe\u7f6e Ctrl+d \u4e3a\u9000\u51fa PowerShell\n# Set-PSReadlineKeyHandler -Key \"Ctrl+d\" -Function ViExit\n# \u8bbe\u7f6e Ctrl+d \u4e3a\u83dc\u5355\u8865\u5168\u548c Intellisense\nSet-PSReadLineKeyHandler -Key \"Ctrl+d\" -Function MenuComplete \n\n# \u8bbe\u7f6e Ctrl+z \u4e3a\u64a4\u9500\nSet-PSReadLineKeyHandler -Key \"Ctrl+z\" -Function Undo\n\n# \u8bbe\u7f6e\u5411\u4e0a\u952e\u4e3a\u540e\u5411\u641c\u7d22\u5386\u53f2\u8bb0\u5f55\nSet-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward\n\n# \u8bbe\u7f6e\u5411\u4e0b\u952e\u4e3a\u524d\u5411\u641c\u7d22\u5386\u53f2\u7eaa\u5f55\nSet-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward\n#-------------------------------  Set Hot-keys END    -------------------------------\n\n#-------------------------------    Functions BEGIN   -------------------------------\n# Python \u76f4\u63a5\u6267\u884c\n$env:PATHEXT += \";.py\"\n\n# \u66f4\u65b0\u7cfb\u7edf\u7ec4\u4ef6\nfunction Update-Packages {\n    # update pip\n    Write-Host \"Step 1: \u66f4\u65b0 pip\" -ForegroundColor Magenta -BackgroundColor Cyan\n    $a = pip list --outdated\n    $num_package = $a.Length - 2\n    for ($i = 0; $i -lt $num_package; $i++) {\n        $tmp = ($a[2 + $i].Split(\" \"))[0]\n        pip install -U $tmp\n    }\n\n    # update TeX Live\n    $CurrentYear = Get-Date -Format yyyy\n    Write-Host \"Step 2: \u66f4\u65b0 TeX Live\" $CurrentYear -ForegroundColor Magenta -BackgroundColor Cyan\n    tlmgr update --self\n    tlmgr update --all\n\n    # update Chocolotey\n    Write-Host \"Step 3: \u66f4\u65b0 Chocolatey\" -ForegroundColor Magenta -BackgroundColor Cyan\n    choco outdated\n}\n#-------------------------------    Functions END     -------------------------------\n\n\n#-------------------------------   Set Alias BEGIN    -------------------------------\n# 1. \u7f16\u8bd1\u51fd\u6570 make\nfunction MakeThings {\n    nmake.exe $args -nologo\n}\nSet-Alias -Name make -Value MakeThings\n\n# 2. \u66f4\u65b0\u7cfb\u7edf os-update\nSet-Alias -Name os-update -Value Update-Packages\n\n# 3. \u67e5\u770b\u76ee\u5f55 ls & ll\nfunction ListDirectory {\n\t(Get-ChildItem).Name\n    Write-Host(\"\")\n}\n# Set-Alias -Name ls -Value ListDirectory\n# Set-Alias -Name ll -Value Get-ChildItem\n\n# 4. \u6253\u5f00\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\nfunction OpenCurrentFolder {\n    param\n    (\n        # \u8f93\u5165\u8981\u6253\u5f00\u7684\u8def\u5f84\n        # \u7528\u6cd5\u793a\u4f8b\uff1aopen C:\\\n        # \u9ed8\u8ba4\u8def\u5f84\uff1a\u5f53\u524d\u5de5\u4f5c\u6587\u4ef6\u5939\n        $Path = '.'\n    )\n    Invoke-Item $Path\n}\nSet-Alias -Name open -Value OpenCurrentFolder\n#-------------------------------    Set Alias END     -------------------------------\n\n#-------------------------------   Set Network BEGIN    -------------------------------\n# 1. \u83b7\u53d6\u6240\u6709 Network Interface\nfunction Get-AllNic {\n    Get-NetAdapter | Sort-Object -Property MacAddress\n}\nSet-Alias -Name getnic -Value Get-AllNic\n\n# 2. \u83b7\u53d6 IPv4 \u5173\u952e\u8def\u7531\nfunction Get-IPv4Routes {\n    Get-NetRoute -AddressFamily IPv4 | Where-Object -FilterScript { $_.NextHop -ne '0.0.0.0' }\n}\nSet-Alias -Name getip -Value Get-IPv4Routes\n\n# 3. \u83b7\u53d6 IPv6 \u5173\u952e\u8def\u7531\nfunction Get-IPv6Routes {\n    Get-NetRoute -AddressFamily IPv6 | Where-Object -FilterScript { $_.NextHop -ne '::' }\n}\nSet-Alias -Name getip6 -Value Get-IPv6Routes\n\n# 4. \u83b7\u53d6\u672c\u673aip\u5730\u5740\nfunction  Show-IP {\n    ipconfig /all | findstr 'IPv4'\n}\nSet-Alias -Name ip -Value Show-IP\n#-------------------------------    Set Network END     -------------------------------\n\n\nRegister-ArgumentCompleter -Native -CommandName 'deno' -ScriptBlock {\n    param($wordToComplete, $commandAst, $cursorPosition)\n\n    $commandElements = $commandAst.CommandElements\n    $command = @(\n        'deno'\n        for ($i = 1; $i -lt $commandElements.Count; $i++) {\n            $element = $commandElements[$i]\n            if ($element -isnot [StringConstantExpressionAst] -or\n                $element.StringConstantType -ne [StringConstantType]::BareWord -or\n                $element.Value.StartsWith('-')) {\n                break\n            }\n            $element.Value\n        }) -join ';'\n\n    $completions = @(switch ($command) {\n            'deno' {\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('-V', 'V', [CompletionResultType]::ParameterName, 'Print version information')\n                [CompletionResult]::new('--version', 'version', [CompletionResultType]::ParameterName, 'Print version information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('bundle', 'bundle', [CompletionResultType]::ParameterValue, 'Bundle module and dependencies into single file')\n                [CompletionResult]::new('cache', 'cache', [CompletionResultType]::ParameterValue, 'Cache the dependencies')\n                [CompletionResult]::new('compile', 'compile', [CompletionResultType]::ParameterValue, 'UNSTABLE: Compile the script into a self contained executable')\n                [CompletionResult]::new('completions', 'completions', [CompletionResultType]::ParameterValue, 'Generate shell completions')\n                [CompletionResult]::new('coverage', 'coverage', [CompletionResultType]::ParameterValue, 'Print coverage reports')\n                [CompletionResult]::new('doc', 'doc', [CompletionResultType]::ParameterValue, 'Show documentation for a module')\n                [CompletionResult]::new('eval', 'eval', [CompletionResultType]::ParameterValue, 'Eval script')\n                [CompletionResult]::new('fmt', 'fmt', [CompletionResultType]::ParameterValue, 'Format source files')\n                [CompletionResult]::new('info', 'info', [CompletionResultType]::ParameterValue, 'Show info about cache or info related to source file')\n                [CompletionResult]::new('install', 'install', [CompletionResultType]::ParameterValue, 'Install script as an executable')\n                [CompletionResult]::new('uninstall', 'uninstall', [CompletionResultType]::ParameterValue, 'Uninstall a script previously installed with deno install')\n                [CompletionResult]::new('lsp', 'lsp', [CompletionResultType]::ParameterValue, 'Start the language server')\n                [CompletionResult]::new('lint', 'lint', [CompletionResultType]::ParameterValue, 'Lint source files')\n                [CompletionResult]::new('repl', 'repl', [CompletionResultType]::ParameterValue, 'Read Eval Print Loop')\n                [CompletionResult]::new('run', 'run', [CompletionResultType]::ParameterValue, 'Run a JavaScript or TypeScript program')\n                [CompletionResult]::new('test', 'test', [CompletionResultType]::ParameterValue, 'Run tests')\n                [CompletionResult]::new('types', 'types', [CompletionResultType]::ParameterValue, 'Print runtime TypeScript declarations')\n                [CompletionResult]::new('upgrade', 'upgrade', [CompletionResultType]::ParameterValue, 'Upgrade deno executable to given version')\n                [CompletionResult]::new('vendor', 'vendor', [CompletionResultType]::ParameterValue, 'Vendor remote modules into a local directory')\n                [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')\n                break\n            }\n            'deno;bundle' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--no-remote', 'no-remote', [CompletionResultType]::ParameterName, 'Do not resolve remote modules')\n                [CompletionResult]::new('--lock-write', 'lock-write', [CompletionResultType]::ParameterName, 'Write lock file (use with --lock)')\n                [CompletionResult]::new('--watch', 'watch', [CompletionResultType]::ParameterName, 'UNSTABLE: Watch for file changes and restart process automatically')\n                [CompletionResult]::new('--no-clear-screen', 'no-clear-screen', [CompletionResultType]::ParameterName, 'Do not clear terminal screen when under watch mode')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;cache' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--no-remote', 'no-remote', [CompletionResultType]::ParameterName, 'Do not resolve remote modules')\n                [CompletionResult]::new('--lock-write', 'lock-write', [CompletionResultType]::ParameterName, 'Write lock file (use with --lock)')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;compile' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('--allow-read', 'allow-read', [CompletionResultType]::ParameterName, 'Allow file system read access')\n                [CompletionResult]::new('--allow-write', 'allow-write', [CompletionResultType]::ParameterName, 'Allow file system write access')\n                [CompletionResult]::new('--allow-net', 'allow-net', [CompletionResultType]::ParameterName, 'Allow network access')\n                [CompletionResult]::new('--unsafely-ignore-certificate-errors', 'unsafely-ignore-certificate-errors', [CompletionResultType]::ParameterName, 'DANGER: Disables verification of TLS certificates')\n                [CompletionResult]::new('--allow-env', 'allow-env', [CompletionResultType]::ParameterName, 'Allow environment access')\n                [CompletionResult]::new('--allow-run', 'allow-run', [CompletionResultType]::ParameterName, 'Allow running subprocesses')\n                [CompletionResult]::new('--allow-ffi', 'allow-ffi', [CompletionResultType]::ParameterName, 'Allow loading dynamic libraries')\n                [CompletionResult]::new('--location', 'location', [CompletionResultType]::ParameterName, 'Value of ''globalThis.location'' used by some web APIs')\n                [CompletionResult]::new('--v8-flags', 'v8-flags', [CompletionResultType]::ParameterName, 'Set V8 command line options (for help: --v8-flags=--help)')\n                [CompletionResult]::new('--seed', 'seed', [CompletionResultType]::ParameterName, 'Seed Math.random()')\n                [CompletionResult]::new('-o', 'o', [CompletionResultType]::ParameterName, 'Output file (defaults to $PWD/<inferred-name>)')\n                [CompletionResult]::new('--output', 'output', [CompletionResultType]::ParameterName, 'Output file (defaults to $PWD/<inferred-name>)')\n                [CompletionResult]::new('--target', 'target', [CompletionResultType]::ParameterName, 'Target OS architecture')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--no-remote', 'no-remote', [CompletionResultType]::ParameterName, 'Do not resolve remote modules')\n                [CompletionResult]::new('--lock-write', 'lock-write', [CompletionResultType]::ParameterName, 'Write lock file (use with --lock)')\n                [CompletionResult]::new('--allow-hrtime', 'allow-hrtime', [CompletionResultType]::ParameterName, 'Allow high resolution time measurement')\n                [CompletionResult]::new('-A', 'A', [CompletionResultType]::ParameterName, 'Allow all permissions')\n                [CompletionResult]::new('--allow-all', 'allow-all', [CompletionResultType]::ParameterName, 'Allow all permissions')\n                [CompletionResult]::new('--prompt', 'prompt', [CompletionResultType]::ParameterName, 'deprecated: Fallback to prompt if required permission wasn''t passed')\n                [CompletionResult]::new('--no-prompt', 'no-prompt', [CompletionResultType]::ParameterName, 'Always throw if required permission wasn''t passed')\n                [CompletionResult]::new('--cached-only', 'cached-only', [CompletionResultType]::ParameterName, 'Require that remote dependencies are already cached')\n                [CompletionResult]::new('--enable-testing-features-do-not-use', 'enable-testing-features-do-not-use', [CompletionResultType]::ParameterName, 'INTERNAL: Enable internal features used during integration testing')\n                [CompletionResult]::new('--compat', 'compat', [CompletionResultType]::ParameterName, 'Node compatibility mode. Currently only enables built-in node modules like ''fs'' and globals like ''process''.')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;completions' {\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;coverage' {\n                [CompletionResult]::new('--ignore', 'ignore', [CompletionResultType]::ParameterName, 'Ignore coverage files')\n                [CompletionResult]::new('--include', 'include', [CompletionResultType]::ParameterName, 'Include source files in the report')\n                [CompletionResult]::new('--exclude', 'exclude', [CompletionResultType]::ParameterName, 'Exclude source files from the report')\n                [CompletionResult]::new('--output', 'output', [CompletionResultType]::ParameterName, 'Output file (defaults to stdout) for lcov')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--lcov', 'lcov', [CompletionResultType]::ParameterName, 'Output coverage report in lcov format')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;doc' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--json', 'json', [CompletionResultType]::ParameterName, 'Output documentation in JSON format')\n                [CompletionResult]::new('--private', 'private', [CompletionResultType]::ParameterName, 'Output private documentation')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;eval' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('--inspect', 'inspect', [CompletionResultType]::ParameterName, 'Activate inspector on host:port (default: 127.0.0.1:9229)')\n                [CompletionResult]::new('--inspect-brk', 'inspect-brk', [CompletionResultType]::ParameterName, 'Activate inspector on host:port and break at start of user script')\n                [CompletionResult]::new('--location', 'location', [CompletionResultType]::ParameterName, 'Value of ''globalThis.location'' used by some web APIs')\n                [CompletionResult]::new('--v8-flags', 'v8-flags', [CompletionResultType]::ParameterName, 'Set V8 command line options (for help: --v8-flags=--help)')\n                [CompletionResult]::new('--seed', 'seed', [CompletionResultType]::ParameterName, 'Seed Math.random()')\n                [CompletionResult]::new('--ext', 'ext', [CompletionResultType]::ParameterName, 'Set standard input (stdin) content type')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--no-remote', 'no-remote', [CompletionResultType]::ParameterName, 'Do not resolve remote modules')\n                [CompletionResult]::new('--lock-write', 'lock-write', [CompletionResultType]::ParameterName, 'Write lock file (use with --lock)')\n                [CompletionResult]::new('--cached-only', 'cached-only', [CompletionResultType]::ParameterName, 'Require that remote dependencies are already cached')\n                [CompletionResult]::new('--enable-testing-features-do-not-use', 'enable-testing-features-do-not-use', [CompletionResultType]::ParameterName, 'INTERNAL: Enable internal features used during integration testing')\n                [CompletionResult]::new('--compat', 'compat', [CompletionResultType]::ParameterName, 'Node compatibility mode. Currently only enables built-in node modules like ''fs'' and globals like ''process''.')\n                [CompletionResult]::new('-T', 'T', [CompletionResultType]::ParameterName, 'Treat eval input as TypeScript')\n                [CompletionResult]::new('--ts', 'ts', [CompletionResultType]::ParameterName, 'Treat eval input as TypeScript')\n                [CompletionResult]::new('-p', 'p', [CompletionResultType]::ParameterName, 'print result to stdout')\n                [CompletionResult]::new('--print', 'print', [CompletionResultType]::ParameterName, 'print result to stdout')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;fmt' {\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--ext', 'ext', [CompletionResultType]::ParameterName, 'Set standard input (stdin) content type')\n                [CompletionResult]::new('--ignore', 'ignore', [CompletionResultType]::ParameterName, 'Ignore formatting particular source files')\n                [CompletionResult]::new('--options-line-width', 'options-line-width', [CompletionResultType]::ParameterName, 'Define maximum line width. Defaults to 80.')\n                [CompletionResult]::new('--options-indent-width', 'options-indent-width', [CompletionResultType]::ParameterName, 'Define indentation width. Defaults to 2.')\n                [CompletionResult]::new('--options-prose-wrap', 'options-prose-wrap', [CompletionResultType]::ParameterName, 'Define how prose should be wrapped. Defaults to always.')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--check', 'check', [CompletionResultType]::ParameterName, 'Check if the source files are formatted')\n                [CompletionResult]::new('--watch', 'watch', [CompletionResultType]::ParameterName, 'UNSTABLE: Watch for file changes and restart process automatically')\n                [CompletionResult]::new('--no-clear-screen', 'no-clear-screen', [CompletionResultType]::ParameterName, 'Do not clear terminal screen when under watch mode')\n                [CompletionResult]::new('--options-use-tabs', 'options-use-tabs', [CompletionResultType]::ParameterName, 'Use tabs instead of spaces for indentation. Defaults to false.')\n                [CompletionResult]::new('--options-single-quote', 'options-single-quote', [CompletionResultType]::ParameterName, 'Use single quotes. Defaults to false.')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;info' {\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('--location', 'location', [CompletionResultType]::ParameterName, 'Show files used for origin bound APIs like the Web Storage API when running a script with ''--location=<HREF>''')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--json', 'json', [CompletionResultType]::ParameterName, 'UNSTABLE: Outputs the information in JSON format')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;install' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('--allow-read', 'allow-read', [CompletionResultType]::ParameterName, 'Allow file system read access')\n                [CompletionResult]::new('--allow-write', 'allow-write', [CompletionResultType]::ParameterName, 'Allow file system write access')\n                [CompletionResult]::new('--allow-net', 'allow-net', [CompletionResultType]::ParameterName, 'Allow network access')\n                [CompletionResult]::new('--unsafely-ignore-certificate-errors', 'unsafely-ignore-certificate-errors', [CompletionResultType]::ParameterName, 'DANGER: Disables verification of TLS certificates')\n                [CompletionResult]::new('--allow-env', 'allow-env', [CompletionResultType]::ParameterName, 'Allow environment access')\n                [CompletionResult]::new('--allow-run', 'allow-run', [CompletionResultType]::ParameterName, 'Allow running subprocesses')\n                [CompletionResult]::new('--allow-ffi', 'allow-ffi', [CompletionResultType]::ParameterName, 'Allow loading dynamic libraries')\n                [CompletionResult]::new('--inspect', 'inspect', [CompletionResultType]::ParameterName, 'Activate inspector on host:port (default: 127.0.0.1:9229)')\n                [CompletionResult]::new('--inspect-brk', 'inspect-brk', [CompletionResultType]::ParameterName, 'Activate inspector on host:port and break at start of user script')\n                [CompletionResult]::new('--location', 'location', [CompletionResultType]::ParameterName, 'Value of ''globalThis.location'' used by some web APIs')\n                [CompletionResult]::new('--v8-flags', 'v8-flags', [CompletionResultType]::ParameterName, 'Set V8 command line options (for help: --v8-flags=--help)')\n                [CompletionResult]::new('--seed', 'seed', [CompletionResultType]::ParameterName, 'Seed Math.random()')\n                [CompletionResult]::new('-n', 'n', [CompletionResultType]::ParameterName, 'Executable file name')\n                [CompletionResult]::new('--name', 'name', [CompletionResultType]::ParameterName, 'Executable file name')\n                [CompletionResult]::new('--root', 'root', [CompletionResultType]::ParameterName, 'Installation root')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--no-remote', 'no-remote', [CompletionResultType]::ParameterName, 'Do not resolve remote modules')\n                [CompletionResult]::new('--lock-write', 'lock-write', [CompletionResultType]::ParameterName, 'Write lock file (use with --lock)')\n                [CompletionResult]::new('--allow-hrtime', 'allow-hrtime', [CompletionResultType]::ParameterName, 'Allow high resolution time measurement')\n                [CompletionResult]::new('-A', 'A', [CompletionResultType]::ParameterName, 'Allow all permissions')\n                [CompletionResult]::new('--allow-all', 'allow-all', [CompletionResultType]::ParameterName, 'Allow all permissions')\n                [CompletionResult]::new('--prompt', 'prompt', [CompletionResultType]::ParameterName, 'deprecated: Fallback to prompt if required permission wasn''t passed')\n                [CompletionResult]::new('--no-prompt', 'no-prompt', [CompletionResultType]::ParameterName, 'Always throw if required permission wasn''t passed')\n                [CompletionResult]::new('--cached-only', 'cached-only', [CompletionResultType]::ParameterName, 'Require that remote dependencies are already cached')\n                [CompletionResult]::new('--enable-testing-features-do-not-use', 'enable-testing-features-do-not-use', [CompletionResultType]::ParameterName, 'INTERNAL: Enable internal features used during integration testing')\n                [CompletionResult]::new('--compat', 'compat', [CompletionResultType]::ParameterName, 'Node compatibility mode. Currently only enables built-in node modules like ''fs'' and globals like ''process''.')\n                [CompletionResult]::new('-f', 'f', [CompletionResultType]::ParameterName, 'Forcefully overwrite existing installation')\n                [CompletionResult]::new('--force', 'force', [CompletionResultType]::ParameterName, 'Forcefully overwrite existing installation')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;uninstall' {\n                [CompletionResult]::new('--root', 'root', [CompletionResultType]::ParameterName, 'Installation root')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;lsp' {\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;lint' {\n                [CompletionResult]::new('--rules-tags', 'rules-tags', [CompletionResultType]::ParameterName, 'Use set of rules with a tag')\n                [CompletionResult]::new('--rules-include', 'rules-include', [CompletionResultType]::ParameterName, 'Include lint rules')\n                [CompletionResult]::new('--rules-exclude', 'rules-exclude', [CompletionResultType]::ParameterName, 'Exclude lint rules')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--ignore', 'ignore', [CompletionResultType]::ParameterName, 'Ignore linting particular source files')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--rules', 'rules', [CompletionResultType]::ParameterName, 'List available rules')\n                [CompletionResult]::new('--json', 'json', [CompletionResultType]::ParameterName, 'Output lint result in JSON format')\n                [CompletionResult]::new('--watch', 'watch', [CompletionResultType]::ParameterName, 'UNSTABLE: Watch for file changes and restart process automatically')\n                [CompletionResult]::new('--no-clear-screen', 'no-clear-screen', [CompletionResultType]::ParameterName, 'Do not clear terminal screen when under watch mode')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;repl' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('--inspect', 'inspect', [CompletionResultType]::ParameterName, 'Activate inspector on host:port (default: 127.0.0.1:9229)')\n                [CompletionResult]::new('--inspect-brk', 'inspect-brk', [CompletionResultType]::ParameterName, 'Activate inspector on host:port and break at start of user script')\n                [CompletionResult]::new('--location', 'location', [CompletionResultType]::ParameterName, 'Value of ''globalThis.location'' used by some web APIs')\n                [CompletionResult]::new('--v8-flags', 'v8-flags', [CompletionResultType]::ParameterName, 'Set V8 command line options (for help: --v8-flags=--help)')\n                [CompletionResult]::new('--seed', 'seed', [CompletionResultType]::ParameterName, 'Seed Math.random()')\n                [CompletionResult]::new('--eval', 'eval', [CompletionResultType]::ParameterName, 'Evaluates the provided code when the REPL starts.')\n                [CompletionResult]::new('--unsafely-ignore-certificate-errors', 'unsafely-ignore-certificate-errors', [CompletionResultType]::ParameterName, 'DANGER: Disables verification of TLS certificates')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--no-remote', 'no-remote', [CompletionResultType]::ParameterName, 'Do not resolve remote modules')\n                [CompletionResult]::new('--lock-write', 'lock-write', [CompletionResultType]::ParameterName, 'Write lock file (use with --lock)')\n                [CompletionResult]::new('--cached-only', 'cached-only', [CompletionResultType]::ParameterName, 'Require that remote dependencies are already cached')\n                [CompletionResult]::new('--enable-testing-features-do-not-use', 'enable-testing-features-do-not-use', [CompletionResultType]::ParameterName, 'INTERNAL: Enable internal features used during integration testing')\n                [CompletionResult]::new('--compat', 'compat', [CompletionResultType]::ParameterName, 'Node compatibility mode. Currently only enables built-in node modules like ''fs'' and globals like ''process''.')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;run' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('--allow-read', 'allow-read', [CompletionResultType]::ParameterName, 'Allow file system read access')\n                [CompletionResult]::new('--allow-write', 'allow-write', [CompletionResultType]::ParameterName, 'Allow file system write access')\n                [CompletionResult]::new('--allow-net', 'allow-net', [CompletionResultType]::ParameterName, 'Allow network access')\n                [CompletionResult]::new('--unsafely-ignore-certificate-errors', 'unsafely-ignore-certificate-errors', [CompletionResultType]::ParameterName, 'DANGER: Disables verification of TLS certificates')\n                [CompletionResult]::new('--allow-env', 'allow-env', [CompletionResultType]::ParameterName, 'Allow environment access')\n                [CompletionResult]::new('--allow-run', 'allow-run', [CompletionResultType]::ParameterName, 'Allow running subprocesses')\n                [CompletionResult]::new('--allow-ffi', 'allow-ffi', [CompletionResultType]::ParameterName, 'Allow loading dynamic libraries')\n                [CompletionResult]::new('--inspect', 'inspect', [CompletionResultType]::ParameterName, 'Activate inspector on host:port (default: 127.0.0.1:9229)')\n                [CompletionResult]::new('--inspect-brk', 'inspect-brk', [CompletionResultType]::ParameterName, 'Activate inspector on host:port and break at start of user script')\n                [CompletionResult]::new('--location', 'location', [CompletionResultType]::ParameterName, 'Value of ''globalThis.location'' used by some web APIs')\n                [CompletionResult]::new('--v8-flags', 'v8-flags', [CompletionResultType]::ParameterName, 'Set V8 command line options (for help: --v8-flags=--help)')\n                [CompletionResult]::new('--seed', 'seed', [CompletionResultType]::ParameterName, 'Seed Math.random()')\n                [CompletionResult]::new('--watch', 'watch', [CompletionResultType]::ParameterName, 'UNSTABLE: Watch for file changes and restart process automatically')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--no-remote', 'no-remote', [CompletionResultType]::ParameterName, 'Do not resolve remote modules')\n                [CompletionResult]::new('--lock-write', 'lock-write', [CompletionResultType]::ParameterName, 'Write lock file (use with --lock)')\n                [CompletionResult]::new('--allow-hrtime', 'allow-hrtime', [CompletionResultType]::ParameterName, 'Allow high resolution time measurement')\n                [CompletionResult]::new('-A', 'A', [CompletionResultType]::ParameterName, 'Allow all permissions')\n                [CompletionResult]::new('--allow-all', 'allow-all', [CompletionResultType]::ParameterName, 'Allow all permissions')\n                [CompletionResult]::new('--prompt', 'prompt', [CompletionResultType]::ParameterName, 'deprecated: Fallback to prompt if required permission wasn''t passed')\n                [CompletionResult]::new('--no-prompt', 'no-prompt', [CompletionResultType]::ParameterName, 'Always throw if required permission wasn''t passed')\n                [CompletionResult]::new('--cached-only', 'cached-only', [CompletionResultType]::ParameterName, 'Require that remote dependencies are already cached')\n                [CompletionResult]::new('--enable-testing-features-do-not-use', 'enable-testing-features-do-not-use', [CompletionResultType]::ParameterName, 'INTERNAL: Enable internal features used during integration testing')\n                [CompletionResult]::new('--compat', 'compat', [CompletionResultType]::ParameterName, 'Node compatibility mode. Currently only enables built-in node modules like ''fs'' and globals like ''process''.')\n                [CompletionResult]::new('--no-clear-screen', 'no-clear-screen', [CompletionResultType]::ParameterName, 'Do not clear terminal screen when under watch mode')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;test' {\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--no-check', 'no-check', [CompletionResultType]::ParameterName, 'Skip type checking modules')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('--allow-read', 'allow-read', [CompletionResultType]::ParameterName, 'Allow file system read access')\n                [CompletionResult]::new('--allow-write', 'allow-write', [CompletionResultType]::ParameterName, 'Allow file system write access')\n                [CompletionResult]::new('--allow-net', 'allow-net', [CompletionResultType]::ParameterName, 'Allow network access')\n                [CompletionResult]::new('--unsafely-ignore-certificate-errors', 'unsafely-ignore-certificate-errors', [CompletionResultType]::ParameterName, 'DANGER: Disables verification of TLS certificates')\n                [CompletionResult]::new('--allow-env', 'allow-env', [CompletionResultType]::ParameterName, 'Allow environment access')\n                [CompletionResult]::new('--allow-run', 'allow-run', [CompletionResultType]::ParameterName, 'Allow running subprocesses')\n                [CompletionResult]::new('--allow-ffi', 'allow-ffi', [CompletionResultType]::ParameterName, 'Allow loading dynamic libraries')\n                [CompletionResult]::new('--inspect', 'inspect', [CompletionResultType]::ParameterName, 'Activate inspector on host:port (default: 127.0.0.1:9229)')\n                [CompletionResult]::new('--inspect-brk', 'inspect-brk', [CompletionResultType]::ParameterName, 'Activate inspector on host:port and break at start of user script')\n                [CompletionResult]::new('--location', 'location', [CompletionResultType]::ParameterName, 'Value of ''globalThis.location'' used by some web APIs')\n                [CompletionResult]::new('--v8-flags', 'v8-flags', [CompletionResultType]::ParameterName, 'Set V8 command line options (for help: --v8-flags=--help)')\n                [CompletionResult]::new('--seed', 'seed', [CompletionResultType]::ParameterName, 'Seed Math.random()')\n                [CompletionResult]::new('--ignore', 'ignore', [CompletionResultType]::ParameterName, 'Ignore files')\n                [CompletionResult]::new('--fail-fast', 'fail-fast', [CompletionResultType]::ParameterName, 'Stop after N errors. Defaults to stopping after first failure.')\n                [CompletionResult]::new('--filter', 'filter', [CompletionResultType]::ParameterName, 'Run tests with this string or pattern in the test name')\n                [CompletionResult]::new('--shuffle', 'shuffle', [CompletionResultType]::ParameterName, '(UNSTABLE): Shuffle the order in which the tests are run')\n                [CompletionResult]::new('--coverage', 'coverage', [CompletionResultType]::ParameterName, 'UNSTABLE: Collect coverage profile data into DIR')\n                [CompletionResult]::new('-j', 'j', [CompletionResultType]::ParameterName, 'Number of parallel workers, defaults to # of CPUs when no value is provided. Defaults to 1 when the option is not present.')\n                [CompletionResult]::new('--jobs', 'jobs', [CompletionResultType]::ParameterName, 'Number of parallel workers, defaults to # of CPUs when no value is provided. Defaults to 1 when the option is not present.')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--no-remote', 'no-remote', [CompletionResultType]::ParameterName, 'Do not resolve remote modules')\n                [CompletionResult]::new('--lock-write', 'lock-write', [CompletionResultType]::ParameterName, 'Write lock file (use with --lock)')\n                [CompletionResult]::new('--allow-hrtime', 'allow-hrtime', [CompletionResultType]::ParameterName, 'Allow high resolution time measurement')\n                [CompletionResult]::new('-A', 'A', [CompletionResultType]::ParameterName, 'Allow all permissions')\n                [CompletionResult]::new('--allow-all', 'allow-all', [CompletionResultType]::ParameterName, 'Allow all permissions')\n                [CompletionResult]::new('--prompt', 'prompt', [CompletionResultType]::ParameterName, 'deprecated: Fallback to prompt if required permission wasn''t passed')\n                [CompletionResult]::new('--no-prompt', 'no-prompt', [CompletionResultType]::ParameterName, 'Always throw if required permission wasn''t passed')\n                [CompletionResult]::new('--cached-only', 'cached-only', [CompletionResultType]::ParameterName, 'Require that remote dependencies are already cached')\n                [CompletionResult]::new('--enable-testing-features-do-not-use', 'enable-testing-features-do-not-use', [CompletionResultType]::ParameterName, 'INTERNAL: Enable internal features used during integration testing')\n                [CompletionResult]::new('--compat', 'compat', [CompletionResultType]::ParameterName, 'Node compatibility mode. Currently only enables built-in node modules like ''fs'' and globals like ''process''.')\n                [CompletionResult]::new('--no-run', 'no-run', [CompletionResultType]::ParameterName, 'Cache test modules, but don''t run tests')\n                [CompletionResult]::new('--doc', 'doc', [CompletionResultType]::ParameterName, 'UNSTABLE: type check code blocks')\n                [CompletionResult]::new('--allow-none', 'allow-none', [CompletionResultType]::ParameterName, 'Don''t return error code if no test files are found')\n                [CompletionResult]::new('--watch', 'watch', [CompletionResultType]::ParameterName, 'UNSTABLE: Watch for file changes and restart process automatically')\n                [CompletionResult]::new('--no-clear-screen', 'no-clear-screen', [CompletionResultType]::ParameterName, 'Do not clear terminal screen when under watch mode')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;types' {\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;upgrade' {\n                [CompletionResult]::new('--version', 'version', [CompletionResultType]::ParameterName, 'The version to upgrade to')\n                [CompletionResult]::new('--output', 'output', [CompletionResultType]::ParameterName, 'The path to output the updated version to')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--dry-run', 'dry-run', [CompletionResultType]::ParameterName, 'Perform all checks without replacing old exe')\n                [CompletionResult]::new('-f', 'f', [CompletionResultType]::ParameterName, 'Replace current exe even if not out-of-date')\n                [CompletionResult]::new('--force', 'force', [CompletionResultType]::ParameterName, 'Replace current exe even if not out-of-date')\n                [CompletionResult]::new('--canary', 'canary', [CompletionResultType]::ParameterName, 'Upgrade to canary builds')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;vendor' {\n                [CompletionResult]::new('--output', 'output', [CompletionResultType]::ParameterName, 'The directory to output the vendored modules to')\n                [CompletionResult]::new('-c', 'c', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--config', 'config', [CompletionResultType]::ParameterName, 'Load configuration file')\n                [CompletionResult]::new('--import-map', 'import-map', [CompletionResultType]::ParameterName, 'Load import map file')\n                [CompletionResult]::new('--lock', 'lock', [CompletionResultType]::ParameterName, 'Check the specified lock file')\n                [CompletionResult]::new('-r', 'r', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--reload', 'reload', [CompletionResultType]::ParameterName, 'Reload source code cache (recompile TypeScript)')\n                [CompletionResult]::new('--cert', 'cert', [CompletionResultType]::ParameterName, 'Load certificate authority from PEM encoded file')\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('-f', 'f', [CompletionResultType]::ParameterName, 'Forcefully overwrite conflicting files in existing output directory')\n                [CompletionResult]::new('--force', 'force', [CompletionResultType]::ParameterName, 'Forcefully overwrite conflicting files in existing output directory')\n                [CompletionResult]::new('-h', 'h', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--help', 'help', [CompletionResultType]::ParameterName, 'Print help information')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n            'deno;help' {\n                [CompletionResult]::new('-L', 'L', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--log-level', 'log-level', [CompletionResultType]::ParameterName, 'Set log level')\n                [CompletionResult]::new('--unstable', 'unstable', [CompletionResultType]::ParameterName, 'Enable unstable features and APIs')\n                [CompletionResult]::new('-q', 'q', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                [CompletionResult]::new('--quiet', 'quiet', [CompletionResultType]::ParameterName, 'Suppress diagnostic output')\n                break\n            }\n        })\n\n    $completions.Where{ $_.CompletionText -like \"$wordToComplete*\" } |\n    Sort-Object -Property ListItemText\n}\n")),(0,l.kt)("h3",{id:"q--a"},"Q & A"),(0,l.kt)("p",null,"Q: \u5728 pwsh \u4e0b\u8f93\u5165",(0,l.kt)("inlineCode",{parentName:"p"},"ip"),"\uff0c\u8f93\u51fa\u7ed3\u679c\u51fa\u73b0\u4e71\u7801\uff0c\u600e\u4e48\u529e\uff1f"),(0,l.kt)("p",null,'A: \u6253\u5f00\u63a7\u5236\u9762\u677f\uff0c\u627e\u5230"\u65f6\u949f\u533a\u57df\uff08\u66f4\u6539\u65e5\u671f\u3001\u65f6\u95f4\u6216\u6570\u5b57\u683c\u5f0f\uff09"\uff0c\u9009\u62e9"\u7ba1\u7406-\u66f4\u6539\u7cfb\u7edf\u533a\u57df\u8bbe\u7f6e"\uff0c\u52fe\u9009"Beta \u7248\uff1a\u4f7f\u7528 Unicode UTF-8 \u63d0\u4f9b\u5168\u7403\u8bed\u8a00\u652f\u6301"\uff0c\u7b49\u5f85\u91cd\u542f'),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"\u63a7\u5236\u9762\u677f",src:o(1931).Z,title:"\u63a7\u5236\u9762\u677f",width:"362",height:"256"})),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"\u65f6\u949f\u533a\u57df\uff08\u66f4\u6539\u65e5\u671f\u3001\u65f6\u95f4\u6216\u6570\u5b57\u683c\u5f0f\uff09",src:o(9687).Z,title:"\u65f6\u949f\u533a\u57df\uff08\u66f4\u6539\u65e5\u671f\u3001\u65f6\u95f4\u6216\u6570\u5b57\u683c\u5f0f\uff09",width:"230",height:"58"})),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"\u7ba1\u7406-\u66f4\u6539\u7cfb\u7edf\u533a\u57df\u8bbe\u7f6e",src:o(2534).Z,title:"\u7ba1\u7406-\u66f4\u6539\u7cfb\u7edf\u533a\u57df\u8bbe\u7f6e",width:"484",height:"616"})),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Beta \u7248\uff1a\u4f7f\u7528 Unicode UTF-8 \u63d0\u4f9b\u5168\u7403\u8bed\u8a00\u652f\u6301",src:o(5824).Z,title:"Beta \u7248\uff1a\u4f7f\u7528 Unicode UTF-8 \u63d0\u4f9b\u5168\u7403\u8bed\u8a00\u652f\u6301",width:"438",height:"255"})))}g.isMDXComponent=!0},1814:(e,t,o)=>{o.d(t,{Z:()=>n});const n={logo:"logo_c4px",logo_vertical:"logo_vertical_HWes",logo_black:"logo_black_gSWU",logo_white:"logo_white_M02V",p:"p_A6TX"}},2534:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/Snipaste_2022-07-21_16-09-37-c9da13a6554214e57fafb6b2d2a230da.png"},9687:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/Snipaste_2022-07-21_16-10-29-fcad376bd55ed580147a821d19bc6662.png"},5824:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/Snipaste_2022-07-21_16-10-43-be521edd5cfbad015941656ebfe90c7c.png"},1931:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/Snipaste_2022-07-21_16-14-52-167f9529180a7b36fb1b07f6e8e6f851.png"}}]);